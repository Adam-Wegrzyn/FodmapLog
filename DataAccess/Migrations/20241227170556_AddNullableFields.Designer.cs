// <auto-generated />
using System;
using DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataAccess.Migrations
{
    [DbContext(typeof(FodmapLogDbContext))]
    [Migration("20241227170556_AddNullableFields")]
    partial class AddNullableFields
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DataAccess.Entities.MealLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("MealLogs");
                });

            modelBuilder.Entity("DataAccess.Entities.Nutriments", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<float?>("Carbohydrates")
                        .HasColumnType("real");

                    b.Property<float?>("Carbohydrates100g")
                        .HasColumnType("real");

                    b.Property<string>("CarbohydratesUnit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("EnergyKcal100g")
                        .HasColumnType("real");

                    b.Property<float?>("EnergyKcalServing")
                        .HasColumnType("real");

                    b.Property<string>("EnergyKcalUnit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("Fat")
                        .HasColumnType("real");

                    b.Property<float?>("Fat100g")
                        .HasColumnType("real");

                    b.Property<float?>("FatServing")
                        .HasColumnType("real");

                    b.Property<string>("FatUnit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("Proteins")
                        .HasColumnType("real");

                    b.Property<float?>("Proteins100g")
                        .HasColumnType("real");

                    b.Property<float?>("ProteinsServing")
                        .HasColumnType("real");

                    b.Property<string>("ProteinsUnit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float?>("Sugars")
                        .HasColumnType("real");

                    b.Property<float?>("Sugars100g")
                        .HasColumnType("real");

                    b.Property<float?>("SugarsServing")
                        .HasColumnType("real");

                    b.Property<string>("SugarsUnit")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Nutriments");
                });

            modelBuilder.Entity("DataAccess.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("IdExternal")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NutrimentsId")
                        .HasColumnType("int");

                    b.Property<string>("ProductQuantity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductQuantityUnit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ServingQuantity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ServingQuantityUnit")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("NutrimentsId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("DataAccess.Entities.ProductQuantity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("MealLogId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<float>("Quantity")
                        .HasColumnType("real");

                    b.Property<int>("Unit")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MealLogId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductQuantity");
                });

            modelBuilder.Entity("DataAccess.Entities.SymptomsLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Symptom")
                        .HasColumnType("int");

                    b.Property<int>("SymptomScale")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("SymptomsLogs");
                });

            modelBuilder.Entity("DataAccess.Entities.Product", b =>
                {
                    b.HasOne("DataAccess.Entities.Nutriments", "Nutriments")
                        .WithMany()
                        .HasForeignKey("NutrimentsId");

                    b.Navigation("Nutriments");
                });

            modelBuilder.Entity("DataAccess.Entities.ProductQuantity", b =>
                {
                    b.HasOne("DataAccess.Entities.MealLog", null)
                        .WithMany("ProductQuantity")
                        .HasForeignKey("MealLogId");

                    b.HasOne("DataAccess.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("DataAccess.Entities.MealLog", b =>
                {
                    b.Navigation("ProductQuantity");
                });
#pragma warning restore 612, 618
        }
    }
}
